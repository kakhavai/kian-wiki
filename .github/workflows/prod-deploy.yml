name: Build, Push and Deploy Node.js app

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  CONTAINER: nodejs-image
  DB_DIALECT: postgres
  POSTGRES_DB: ${{ secrets.POSTGRES_DB}}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }} 

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin  

      # Check out the repo    
      - name: Checkout
        uses: actions/checkout@v2
      
      # Build the images    
      - name: Build the docker-compose stack  
        run: docker-compose build
      
      # List images
      - name: List images
        run: docker images
      
      # Push images
      - name: Push images
        run: docker push kian-wiki-nodeserver:latest && docker push kian-wiki-nginx:latest && docker push kian-wiki-database:latest

        
  # deploy:
  #   needs: [push_to_registry]
  #   name: Deploy to DigitalOcean
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup SSH connection
  #       uses: webfactory/ssh-agent@v0.5.1
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_KEY }}

  #     - name: Adding Known Hosts
  #       run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

  #     - name: Pull latest container
  #       run: |
  #         ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker pull ${{env.REGISTRY}}/${{env.REPO}}:latest"
  #     - name: Start docker container
  #       run: |
  #         ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker run -p 8080:8080 -d --name=${{env.CONTAINER}} ${{env.REGISTRY}}/${{env.REPO}}:latest"